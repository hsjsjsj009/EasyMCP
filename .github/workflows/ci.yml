name: CI-PR-Checks

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

env:
  CARGO_TERM_COLOR: always

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Install Rust
      uses: dtolnay/rust-toolchain@stable
    - name: Cache dependencies
      uses: Swatinem/rust-cache@v2
    - name: Run tests
      run: cargo test --verbose

  build:
    name: Build (${{ matrix.os }}-${{ matrix.target }})
    needs: test
    strategy:
      matrix:
        include:
          # Linux x86_64
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            name: linux-x64
            cross: false
          # Linux ARM64
          - os: ubuntu-latest
            target: aarch64-unknown-linux-gnu
            name: linux-arm64
            cross: true
          # Windows x86_64
          - os: windows-latest
            target: x86_64-pc-windows-msvc
            name: windows-x64
            cross: false
            ext: .exe
          # macOS x86_64
          - os: macos-latest
            target: x86_64-apple-darwin
            name: macos-x64
            cross: false
          # macOS ARM64 (Apple Silicon)
          - os: macos-latest
            target: aarch64-apple-darwin
            name: macos-arm64
            cross: false

    runs-on: ${{ matrix.os }}

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Install Rust
      uses: dtolnay/rust-toolchain@stable
      with:
        targets: ${{ matrix.target }}

    - name: Cache dependencies
      uses: Swatinem/rust-cache@v2
      with:
        key: ${{ matrix.target }}

    - name: Install cross-compilation tools (Linux ARM64)
      if: matrix.cross == true && startsWith(matrix.os, 'ubuntu')
      run: |
        sudo apt-get update
        sudo apt-get install -y gcc-aarch64-linux-gnu

    - name: Build binary
      run: |
        cargo build --release --target ${{ matrix.target }} --verbose

    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: easymcp-${{ matrix.name }}
        path: target/${{ matrix.target }}/release/
        retention-days: 7
